@using SixMan.ChiMa.Domain.Base
@using SixMan.ChiMa.Web.Startup
@using SixMan.ChiMa.Web.Models.Food
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using SixMan.ChiMa.Web.Extensions
@using SixMan.ChiMa.Application
@model EditFoodMaterialModalViewModel
@{
    ViewBag.CurrentPageName = PageNames.FoodMaterial; //The menu item will be active for this page.
}

<div id="toolbar" class="btn-group">
    <form id= "uploadForm">
        <input id="uploadFile" type="file" name="excelfile" />
        <button id="btn_upload" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>导入
        </button>
    </form>
        <button id="btn_add" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button id="btn_edit" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
        </button>
        <button id="btn_delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
        </button>
</div>

<table id="tb_dept" data-bind="myBootstrapTable:$root" style="width:3000px">
    <thead>
        <tr>
            <th data-checkbox="true"></th>
            @foreach (var property in Model.Meta.ShowProperties())
            {
                var width = property.PropertyName == "Description" ? "200" : "auto";
                if (property.DisplayName == MultiMediaBaseDto.IMAGE)
                {
                    <th data-field="@property.JsonPropertyName()" data-width="120" data-formatter="imgFormater">@property.Title()</th>
                }
                else
                {
                    <th data-field="@property.JsonPropertyName()" data-width="@width">@property.Title()</th>
                }
            }
        </tr>
    </thead>
</table>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">操作</h4>
            </div>
            <div class="modal-body">
                <bg-form id="myForm"  asp-action="SignUp" asp-for="@Model">
                    <div class="form-group" id="div_Photo"  >
                            <label for="photo">图片</label>
                            <input type="text" data-bind="value:photo" id="photo" name="photo" readonly="readonly"/>
                            <input  type="file"  id="imgfile" name="imgfile" />
                            <button id="btn_upload_img" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>上传
                            </button>
                    </div>   
                    <div class="form-group" id="div_FoodMaterialCategoryId">
                        <label for="txt_category">类别</label>
                        <select data-bind="options:categories, optionsText:'Name', optionsValue:'Id', value: foodMaterialCategoryId" id="txt_category"></select>
                    </div>                   
                         
                </bg-form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>关闭</button>
                <button type="button" id="btn_submit" class="btn btn-primary" ><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>保存</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
<script>
    //初始化
    $(function () {
        //0, 设置service
        ko.appService = abp.services.app.foodMaterial;
        //1、初始化表格
        tableInit.Init();
        //2、注册增删改事件
        operate.operateInit();
        //3、设置表格的列宽度可拖动调整列宽
        setAutoColDragAdjust();
    });

    function newEntityModel() {
        var enityModel = {
            id: ko.observable(),
            @foreach (var property in Model.Meta.EditProperties())
            {
                @(@property.JsonPropertyName() + " : ko.observable(),");
            }
            categories: ko.observableArray(@Model.Categories),
            whenchage: function (p) {
                alert('here:' + p);

            },
        };
        return enityModel;
    }

    //初始化表格
    var tableInit = {
        Init: function () {
            //绑定table的viewmodel
            this.myViewModel = new ko.bootstrapTableViewModel({
                url: '/api/services/app/FoodMaterial/GetAll',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
            });
            ko.applyBindings(this.myViewModel, document.getElementById("tb_dept"));
        }
    };

    //操作
    var operate = {
        //初始化按钮事件
        operateInit: function () {
            this.operateUpload();
            this.operateUploadImg();

            this.operateAdd();
            this.operateUpdate();
            this.operateDelete();
            this.EntityModel = newEntityModel();
        },
        //导入
        operateUpload: function () {
            $('#btn_upload').on("click", function () {
                var formData = new FormData($("#uploadForm")[0]);                 
                $.ajax({
                    type: "POST",
                    url: "/FoodMaterial/Import",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (message) {
                        alert(message);
                        tableInit.myViewModel.refresh();
                    },
                    error: function () {
                        alert("上传文件出现错误！");
                    }
                });
            });
        },
        //上传图像
        operateUploadImg: function () {
            $('#btn_upload_img').on("click", function () {
                var formData = new FormData();
                formData.append('photo', $("#photo")[0].value);
                formData.append('imgfile', $("#imgfile")[0].files[0] );
                $.ajax({
                    type: "POST",
                    url: "/FoodMaterial/UploadImg",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (message) {
                        alert(message);
                    },
                    error: function () {
                        alert("上传文件出现错误！");
                    }
                });
            });
        },
        //新增
        operateAdd: function () {
            $('#btn_add').on("click", function () {
                $("#myModal").modal().on("shown.bs.modal", function () {
                    var oEmptyModel = newEntityModel();
                    ko.utils.extend(operate.EntityModel, oEmptyModel);
                    ko.applyBindings(operate.EntityModel, document.getElementById("myModal"));
                    operate.operateSave();
                }).on('hidden.bs.modal', function () {
                    ko.cleanNode(document.getElementById("myModal"));
                });
            });
        },
        //编辑
        operateUpdate: function () {
            $('#btn_edit').on("click", function () {
                var arrselectedData = tableInit.myViewModel.getSelections();
                if (!operate.operateCheck(arrselectedData)) { return; }
                $("#myModal").modal().on("shown.bs.modal", function () {
                    //将选中该行数据有数据Model通过Mapping组件转换为viewmodel
                    ko.utils.extend(operate.EntityModel, ko.mapping.fromJS(arrselectedData[0]));
                    ko.applyBindings(operate.EntityModel, document.getElementById("myModal"));
                    operate.operateSave();
                }).on('hidden.bs.modal', function () {
                    //关闭弹出框的时候清除绑定(这个清空包括清空绑定和清空注册事件)
                    ko.cleanNode(document.getElementById("myModal"));
                });
            });
        },
        //删除
        operateDelete: function () {
            $('#btn_delete').on("click", function () {
                var arrselectedData = tableInit.myViewModel.getSelections();
                //var data = JSON.stringify(arrselectedData);
                var idsData = arrselectedData.map(function (item) {
                    return item.id;
                }).join(",");
                var oDataModel = ko.toJS(arrselectedData);
                abp.message.confirm(
                    "Delete foodMaterial '" + "'?",
                    function (isConfirmed) {
                        if (isConfirmed) {
                            ko.appService.deleteList({
                                ids: idsData
                            }
                            ).done(function () {
                                tableInit.myViewModel.refresh();
                            });
                        }
                    }
                );
                // $.ajax({
                //     url: "/FoodMaterial/Delete",
                //     type: "post",
                //     contentType: 'application/json',
                //     data: JSON.stringify(arrselectedData),
                //     success: function (data, status) {
                //         //alert(status);
                //         tableInit.myViewModel.refresh();
                //     }
                // });
            });
        },
        //保存数据
        operateSave: function () {
            $('#btn_submit').on("click", function () {
                var form = $("#myForm");
                $.validator.unobtrusive.parse(form);
                if (!form.valid()) {
                    event.preventDefault();
                    return;
                }
                //取到当前的viewmodel
                var oViewModel = operate.EntityModel;
                //将Viewmodel转换为数据model
                var oDataModel = ko.toJS(oViewModel);
                var funcName = oDataModel.id ? "Update" : "Add";

                if (funcName === "Add") {
                    ko.appService.create(oDataModel).done(function (res) {
                        alert(JSON.stringify(res));
                        tableInit.myViewModel.refresh();
                    });
                }
                else {
                    ko.appService.update(oDataModel).done(function (res) {
                        alert(JSON.stringify(res));
                        tableInit.myViewModel.refresh();
                   });
                }
                $("#myModal").modal("hide");

            });
        },
        //数据校验
        operateCheck: function (arr) {
            if (arr.length <= 0) {
                alert("请至少选择一行数据");
                return false;
            }
            if (arr.length > 1) {
                alert("只能编辑一行数据");
                return false;
            }
            return true;
        }
    }

    function setAutoColDragAdjust() {
        var tTD; //用来存储当前更改宽度的Table Cell,避免快速移动鼠标的问题   
        var table = document.getElementById("tb_dept");
        for (j = 0; j < table.rows[0].cells.length; j++) {
            table.rows[0].cells[j].onmousedown = function () {
                //记录单元格   
                tTD = this;
                if (event.offsetX > tTD.offsetWidth - 10) {
                    tTD.mouseDown = true;
                    tTD.oldX = event.x;
                    tTD.oldWidth = tTD.offsetWidth;
                }
                //记录Table宽度   
                //table = tTD; while (table.tagName != ‘TABLE') table = table.parentElement;   
                //tTD.tableWidth = table.offsetWidth;   
            };
            table.rows[0].cells[j].onmouseup = function () {
                //结束宽度调整   
                if (tTD == undefined) tTD = this;
                tTD.mouseDown = false;
                tTD.style.cursor = 'default';
            };
            table.rows[0].cells[j].onmousemove = function () {
                //更改鼠标样式   
                if (event.offsetX > this.offsetWidth - 10)
                    this.style.cursor = 'col-resize';
                else
                    this.style.cursor = 'default';
                //取出暂存的Table Cell   
                if (tTD == undefined) tTD = this;
                //调整宽度   
                if (tTD.mouseDown != null && tTD.mouseDown == true) {
                    tTD.style.cursor = 'default';
                    if (tTD.oldWidth + (event.x - tTD.oldX) > 0)
                        tTD.width = tTD.oldWidth + (event.x - tTD.oldX);
                    //调整列宽   
                    tTD.style.width = tTD.width;
                    tTD.style.cursor = 'col-resize';
                    //调整该列中的每个Cell   
                    table = tTD; while (table.tagName != 'TABLE') table = table.parentElement;
                    for (j = 0; j < table.rows.length; j++) {
                        table.rows[j].cells[tTD.cellIndex].width = tTD.width;
                    }
                    //调整整个表   
                    //table.width = tTD.tableWidth + (tTD.offsetWidth – tTD.oldWidth);   
                    //table.style.width = table.width;   
                }
            };
        }  

    }

    function lateStyle(value, row, index) {
        if (index > 1) {
            return {
                css: {
                    "min-width": 100,
                }
            }
        }
        return {};
    }

    function imgFormater(value, row, index) {
        if (value) {
            var img = '<img class="img-rounded"  height="100" width="100" src="/images/' + value + '">' + '</img>';
            return img;
        }
        else {
            return '';
        }
    }

</script> 

}